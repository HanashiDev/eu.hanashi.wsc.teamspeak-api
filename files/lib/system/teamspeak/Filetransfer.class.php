<?php

namespace wcf\system\teamspeak;

use wcf\system\exception\TeamSpeakException;
use wcf\system\io\File;
use wcf\system\io\RemoteFile;
use wcf\util\FileUtil;

/**
* Api for connection with TeamSpeak filetransfer server.
*
* @author   Peter Lohse <hanashi@hanashi.eu>
* @copyright    Hanashi
* @license  Freie Lizenz (https://hanashi.eu/freie-lizenz/)
* @package  WoltLabSuite\Core\System\TeamSpeak
*/
final class Filetransfer
{
    /**
     * the hostname/ip of your TeamSpeak server
     *
     * @var string
     */
    protected $hostname;

    /**
     * the filetransfer port of your TeamSpeak server (standard: 30033)
     *
     * @var int
     */
    protected $port;

    /**
     * Socket of Server
     *
     * @var RemoteFile
     */
    protected $sock;

    /**
     * construct of filetransfer class
     *
     * @param   string  $hostname   the hostname/ip of your TeamSpeak server
     * @param   int     $port       the filetransfer port of your TeamSpeak server (standard: 30033)
     */
    public function __construct($hostname, $port = 30033)
    {
        $this->hostname = $hostname;
        $this->port = $port;

        $this->connect();
    }

    /**
     * destruct
     */
    public function __destruct()
    {
        if ($this->sock) {
            $this->sock->close();
        }
    }

    /**
     * method to connect with teamspeak filetransfer server
     *
     * @throws TeamSpeakException
     */
    protected function connect()
    {
        $this->sock = new RemoteFile($this->hostname, $this->port);
        if (!$this->sock) {
            throw new TeamSpeakException('Connection failed.');
        }
    }

    /**
     * upload a file to teamspeak
     * dont forget to use "ftinitupload" before this method
     *
     * @param   string  $ftkey      the file transfer key, generated by teamspeak server query
     * @param   mixed   $data       the file data to upload
     * @param   int     $seek       start byte of file
     */
    public function upload($ftkey, $filepath, $seek = 0)
    {
        // write file transfer key to server
        $this->sock->write($ftkey);

        // upload file with blocks
        $size = \filesize($filepath);
        $pack = 4096;
        $file = new File($filepath, 'r');

        while ($seek < $size) {
            $rest = $size - $seek;
            $pack = $rest < $pack ? $rest : $pack;
            $this->sock->write($file->read($rest < $pack ? $rest : $pack));
            $seek = $seek + $pack;
        }

        $file->close();
    }

    /**
     * download a file from teamspeak
     * dont forget to use "ftinitdownload" before this method
     *
     * @param   string  $ftkey      the file transfer key, generated by teamspeak server query
     * @param   int     $size       filesize of download file
     * @return  string  return the path to downloaded file
     */
    public function download($ftkey, $size)
    {
        // write file transfer key to server
        $this->sock->write($ftkey);

        // create temporary file
        $tmpFile = FileUtil::getTemporaryFilename();
        $file = new File($tmpFile, 'a');

        // download file
        $pack = 4096;
        $seek = 0;
        while ($seek < $size) {
            $rest = $size - $seek;
            $pack = $rest < $pack ? $rest : $pack;
            $file->write($this->sock->read($rest < $pack ? $rest : $pack));
            $seek = $seek + $pack;
        }

        // close file handler
        $file->close();

        return $tmpFile;
    }
}
